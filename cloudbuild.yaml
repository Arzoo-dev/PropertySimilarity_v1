steps:
  - name: 'gcr.io/cloud-builders/docker'
    id: Build Docker Image
    args:
      [
        'build',
        '-t',
        'us-central1-docker.pkg.dev/dash-realty-agent-portal/property-api-repo-us-central1/property-api-vertex-fixed',
        '-f',
        'api/Dockerfile',
        '.'
      ]

  - name: 'gcr.io/cloud-builders/docker'
    id: Push Docker Image
    args:
      [
        'push',
        'us-central1-docker.pkg.dev/dash-realty-agent-portal/property-api-repo-us-central1/property-api-vertex-fixed'
      ]

  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    id: Authenticate with Service Account
    entrypoint: 'bash'
    secretEnv: ['GOOGLE_APPLICATION_CREDENTIALS_JSON']
    args:
      - '-c'
      - |
        echo "$$GOOGLE_APPLICATION_CREDENTIALS_JSON" > sa_key.json
        export GOOGLE_APPLICATION_CREDENTIALS=sa_key.json
        gcloud auth activate-service-account --key-file=sa_key.json
        gcloud config set project dash-realty-agent-portal

  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    id: Deploy to Cloud Run
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        gcloud run deploy compare-property \
          --image=us-central1-docker.pkg.dev/dash-realty-agent-portal/property-api-repo-us-central1/property-api-vertex-fixed \
          --region=us-central1 \
          --platform=managed \
          --allow-unauthenticated \
          --service-account=vertex-ai-access-398@dash-realty-agent-portal.iam.gserviceaccount.com \
          --cpu=4 \
          --memory=16Gi \
          --timeout=300s \
          --port=8080 \
          --max-instances=3 \
          --execution-environment=gen2 \
          --update-secrets=GOOGLE_APPLICATION_CREDENTIALS_JSON=projects/464994061323/secrets/dash-comps-puller-ai:latest \
          --set-env-vars=MODEL_GCS_PATH=gs://property-comparison-model/final_model/DINOv2_custom.pth

availableSecrets:
  secretManager:
    - versionName: projects/464994061323/secrets/dash-comps-puller-ai/versions/latest
      env: GOOGLE_APPLICATION_CREDENTIALS_JSON

options:
  logging: CLOUD_LOGGING_ONLY
  machineType: E2_HIGHCPU_8

timeout: 1800s